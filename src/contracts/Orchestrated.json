{
  "contractName": "Orchestrated",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "access",
          "type": "address"
        }
      ],
      "name": "GrantedAccess",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "authorized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "orchestrate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.10+commit.00c0fcaf\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"access\",\"type\":\"address\"}],\"name\":\"GrantedAccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"orchestrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Orchestrated allows to define static access control between multiple contracts. This contract would be used as a parent contract of any contract that needs to restrict access to some methods, which would be marked with the `onlyOrchestrated modifier. During deployment, the contract deployer (`owner`) can register any contracts that have privileged access by calling `orchestrate`. Once deployment is completed, `owner` can call `transferOwnership(address(0))` to avoid any more contracts ever gaining privileged access.\",\"methods\":{\"orchestrate(address)\":{\"details\":\"Add user to the authorized users list\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/bruce/dev/yield/yDai/contracts/helpers/Orchestrated.sol\":\"Orchestrated\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/bruce/dev/yield/yDai/contracts/helpers/Orchestrated.sol\":{\"keccak256\":\"0x121b1426ad2c25529de315bbf2633128fac56404de47a65374ece5e0f3039e25\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3a42f93472a4fd14ad612607562a84a6f8084078215bd7c5e7f3f675f20defdd\",\"dweb:/ipfs/QmZnKwjeRztfbyPipypymqfoZvn8VacBT8EE8oPyX8xitk\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0xdb26cbf4d028490f49831a7865c2fe1b28db44b535ca8d343785a3b768aae183\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://840b14ce0315c47d49ba328f1f9fa7654ded1c9e1559e6c5e777a7b2dc28bf0a\",\"dweb:/ipfs/QmTLLabn4wcfGro9LEmUXUN2nwKqZSotXMvjDCLXEnLtZP\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4bd6402ca6b3419008c2b482aff54e66836e8cb4eba2680e42ac5884ae6424fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f9f711fb8d0d92aeea1c327e3845d13ca1fa8f142e47f8723cd5b3106fb29a3\",\"dweb:/ipfs/QmVQUReDW9f4zGqhizwHnyU8EntMs95tbASdqkGncnikba\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060006100246001600160e01b0361007316565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610077565b3390565b610418806100866000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c57806380f5a440146100665780638da5cb5b1461008c578063b9181611146100b0578063f2fde38b146100ea575b600080fd5b610064610110565b005b6100646004803603602081101561007c57600080fd5b50356001600160a01b03166101c4565b61009461028a565b604080516001600160a01b039092168252519081900360200190f35b6100d6600480360360208110156100c657600080fd5b50356001600160a01b0316610299565b604080519115158252519081900360200190f35b6100646004803603602081101561010057600080fd5b50356001600160a01b03166102ae565b6101186103b8565b6000546001600160a01b0390811691161461017a576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6101cc6103b8565b6000546001600160a01b0390811691161461022e576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038116600081815260016020818152604092839020805460ff1916909217909155815192835290517f6a7c5f28ea564fafc8b079663a2a9b9d26fe735d97c97611484ce044f40a16e29281900390910190a150565b6000546001600160a01b031690565b60016020526000908152604090205460ff1681565b6102b66103b8565b6000546001600160a01b03908116911614610318576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b03811661035d5760405162461bcd60e51b81526004018080602001828103825260268152602001806103bd6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a2646970667358221220e1e1547040716f0571e8592e0506a77e179bc9f7f5e4cd51087754f295145e3c64736f6c634300060a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c57806380f5a440146100665780638da5cb5b1461008c578063b9181611146100b0578063f2fde38b146100ea575b600080fd5b610064610110565b005b6100646004803603602081101561007c57600080fd5b50356001600160a01b03166101c4565b61009461028a565b604080516001600160a01b039092168252519081900360200190f35b6100d6600480360360208110156100c657600080fd5b50356001600160a01b0316610299565b604080519115158252519081900360200190f35b6100646004803603602081101561010057600080fd5b50356001600160a01b03166102ae565b6101186103b8565b6000546001600160a01b0390811691161461017a576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6101cc6103b8565b6000546001600160a01b0390811691161461022e576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038116600081815260016020818152604092839020805460ff1916909217909155815192835290517f6a7c5f28ea564fafc8b079663a2a9b9d26fe735d97c97611484ce044f40a16e29281900390910190a150565b6000546001600160a01b031690565b60016020526000908152604090205460ff1681565b6102b66103b8565b6000546001600160a01b03908116911614610318576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b03811661035d5760405162461bcd60e51b81526004018080602001828103825260268152602001806103bd6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a2646970667358221220e1e1547040716f0571e8592e0506a77e179bc9f7f5e4cd51087754f295145e3c64736f6c634300060a0033",
  "immutableReferences": {},
  "sourceMap": "689:530:17:-:0;;;824:34;;;;;;;;;-1:-1:-1;865:17:47;885:12;-1:-1:-1;;;;;885:10:47;:12;:::i;:::-;907:6;:18;;-1:-1:-1;;;;;;907:18:47;-1:-1:-1;;;;;907:18:47;;;;;;;940:43;;907:18;;-1:-1:-1;907:18:47;940:43;;907:6;;940:43;831:159;689:530:17;;590:104:46;677:10;590:104;:::o;689:530:17:-;;;;;;;",
  "deployedSourceMap": "689:530:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1689:145:47;;;:::i;:::-;;1087:129:17;;;;;;;;;;;;;;;;-1:-1:-1;1087:129:17;-1:-1:-1;;;;;1087:129:17;;:::i;1066:77:47:-;;;:::i;:::-;;;;-1:-1:-1;;;;;1066:77:47;;;;;;;;;;;;;;773:42:17;;;;;;;;;;;;;;;;-1:-1:-1;773:42:17;-1:-1:-1;;;;;773:42:17;;:::i;:::-;;;;;;;;;;;;;;;;;;1983:240:47;;;;;;;;;;;;;;;;-1:-1:-1;1983:240:47;-1:-1:-1;;;;;1983:240:47;;:::i;1689:145::-;1280:12;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:47;;;:22;;;1262:67;;;;;-1:-1:-1;;;1262:67:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1795:1:::1;1779:6:::0;;1758:40:::1;::::0;-1:-1:-1;;;;;1779:6:47;;::::1;::::0;1758:40:::1;::::0;1795:1;;1758:40:::1;1825:1;1808:19:::0;;-1:-1:-1;;;;;;1808:19:47::1;::::0;;1689:145::o;1087:129:17:-;1280:12:47;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:47;;;:22;;;1262:67;;;;;-1:-1:-1;;;1262:67:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1150:16:17;::::1;;::::0;;;1169:4:::1;1150:16;::::0;;;;;;;;:23;;-1:-1:-1;;1150:23:17::1;::::0;;::::1;::::0;;;1189:19;;;;;;;::::1;::::0;;;;;;;;::::1;1087:129:::0;:::o;1066:77:47:-;1104:7;1130:6;-1:-1:-1;;;;;1130:6:47;1066:77;:::o;773:42:17:-;;;;;;;;;;;;;;;:::o;1983:240:47:-;1280:12;:10;:12::i;:::-;1270:6;;-1:-1:-1;;;;;1270:6:47;;;:22;;;1262:67;;;;;-1:-1:-1;;;1262:67:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2071:22:47;::::1;2063:73;;;;-1:-1:-1::0;;;2063:73:47::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2172:6;::::0;;2151:38:::1;::::0;-1:-1:-1;;;;;2151:38:47;;::::1;::::0;2172:6;::::1;::::0;2151:38:::1;::::0;::::1;2199:6;:17:::0;;-1:-1:-1;;;;;;2199:17:47::1;-1:-1:-1::0;;;;;2199:17:47;;;::::1;::::0;;;::::1;::::0;;1983:240::o;590:104:46:-;677:10;590:104;:::o",
  "source": "// SPDX-License-Identifier: GPL-3.0-or-later\r\npragma solidity ^0.6.10;\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\n\r\n/**\r\n * @dev Orchestrated allows to define static access control between multiple contracts.\r\n * This contract would be used as a parent contract of any contract that needs to restrict access to some methods,\r\n * which would be marked with the `onlyOrchestrated modifier.\r\n * During deployment, the contract deployer (`owner`) can register any contracts that have privileged access by calling `orchestrate`.\r\n * Once deployment is completed, `owner` can call `transferOwnership(address(0))` to avoid any more contracts ever gaining privileged access.\r\n */\r\n\r\ncontract Orchestrated is Ownable {\r\n    event GrantedAccess(address access);\r\n\r\n    mapping(address => bool) public authorized;\r\n\r\n    constructor () public Ownable() {}\r\n\r\n    /// @dev Restrict usage to authorized users\r\n    modifier onlyOrchestrated(string memory err) {\r\n        require(authorized[msg.sender], err);\r\n        _;\r\n    }\r\n\r\n    /// @dev Add user to the authorized users list\r\n    function orchestrate(address user) public onlyOwner {\r\n        authorized[user] = true;\r\n        emit GrantedAccess(user);\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\bruce\\dev\\yield\\yDai\\contracts\\helpers\\Orchestrated.sol",
  "ast": {
    "absolutePath": "/C/Users/bruce/dev/yield/yDai/contracts/helpers/Orchestrated.sol",
    "exportedSymbols": {
      "Orchestrated": [
        9465
      ]
    },
    "id": 9466,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9412,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "46:24:17"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 9413,
        "nodeType": "ImportDirective",
        "scope": 9466,
        "sourceUnit": 26114,
        "src": "72:52:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9415,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 26113,
              "src": "714:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$26113",
                "typeString": "contract Ownable"
              }
            },
            "id": 9416,
            "nodeType": "InheritanceSpecifier",
            "src": "714:7:17"
          }
        ],
        "contractDependencies": [
          26004,
          26113
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 9414,
          "nodeType": "StructuredDocumentation",
          "src": "130:555:17",
          "text": " @dev Orchestrated allows to define static access control between multiple contracts.\n This contract would be used as a parent contract of any contract that needs to restrict access to some methods,\n which would be marked with the `onlyOrchestrated modifier.\n During deployment, the contract deployer (`owner`) can register any contracts that have privileged access by calling `orchestrate`.\n Once deployment is completed, `owner` can call `transferOwnership(address(0))` to avoid any more contracts ever gaining privileged access."
        },
        "fullyImplemented": true,
        "id": 9465,
        "linearizedBaseContracts": [
          9465,
          26113,
          26004
        ],
        "name": "Orchestrated",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 9420,
            "name": "GrantedAccess",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9419,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9418,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "access",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9420,
                  "src": "749:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9417,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "749:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "748:16:17"
            },
            "src": "729:36:17"
          },
          {
            "constant": false,
            "functionSelector": "b9181611",
            "id": 9424,
            "mutability": "mutable",
            "name": "authorized",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 9465,
            "src": "773:42:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 9423,
              "keyType": {
                "id": 9421,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "781:7:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "773:24:17",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 9422,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "792:4:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9429,
              "nodeType": "Block",
              "src": "856:2:17",
              "statements": []
            },
            "documentation": null,
            "id": 9430,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 9427,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9426,
                  "name": "Ownable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 26113,
                  "src": "846:7:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Ownable_$26113_$",
                    "typeString": "type(contract Ownable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "846:9:17"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 9425,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "836:2:17"
            },
            "returnParameters": {
              "id": 9428,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "856:0:17"
            },
            "scope": 9465,
            "src": "824:34:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9444,
              "nodeType": "Block",
              "src": "960:67:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 9436,
                          "name": "authorized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9424,
                          "src": "979:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 9439,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 9437,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "990:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 9438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "990:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "979:22:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9440,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9433,
                        "src": "1003:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 9435,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "971:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "971:36:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9442,
                  "nodeType": "ExpressionStatement",
                  "src": "971:36:17"
                },
                {
                  "id": 9443,
                  "nodeType": "PlaceholderStatement",
                  "src": "1018:1:17"
                }
              ]
            },
            "documentation": {
              "id": 9431,
              "nodeType": "StructuredDocumentation",
              "src": "866:43:17",
              "text": "@dev Restrict usage to authorized users"
            },
            "id": 9445,
            "name": "onlyOrchestrated",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 9434,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9433,
                  "mutability": "mutable",
                  "name": "err",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9445,
                  "src": "941:17:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9432,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "941:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "940:19:17"
            },
            "src": "915:112:17",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 9463,
              "nodeType": "Block",
              "src": "1139:77:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 9453,
                        "name": "authorized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9424,
                        "src": "1150:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 9455,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 9454,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9448,
                        "src": "1161:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1150:16:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 9456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1169:4:17",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1150:23:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9458,
                  "nodeType": "ExpressionStatement",
                  "src": "1150:23:17"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9460,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9448,
                        "src": "1203:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9459,
                      "name": "GrantedAccess",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9420,
                      "src": "1189:13:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 9461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1189:19:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9462,
                  "nodeType": "EmitStatement",
                  "src": "1184:24:17"
                }
              ]
            },
            "documentation": {
              "id": 9446,
              "nodeType": "StructuredDocumentation",
              "src": "1035:46:17",
              "text": "@dev Add user to the authorized users list"
            },
            "functionSelector": "80f5a440",
            "id": 9464,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 9451,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9450,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 26062,
                  "src": "1129:9:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1129:9:17"
              }
            ],
            "name": "orchestrate",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 9449,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9448,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9464,
                  "src": "1108:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9447,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1108:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1107:14:17"
            },
            "returnParameters": {
              "id": 9452,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1139:0:17"
            },
            "scope": 9465,
            "src": "1087:129:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 9466,
        "src": "689:530:17"
      }
    ],
    "src": "46:1175:17"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/bruce/dev/yield/yDai/contracts/helpers/Orchestrated.sol",
    "exportedSymbols": {
      "Orchestrated": [
        9465
      ]
    },
    "id": 9466,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9412,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "46:24:17"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 9413,
        "nodeType": "ImportDirective",
        "scope": 9466,
        "sourceUnit": 26114,
        "src": "72:52:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9415,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 26113,
              "src": "714:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$26113",
                "typeString": "contract Ownable"
              }
            },
            "id": 9416,
            "nodeType": "InheritanceSpecifier",
            "src": "714:7:17"
          }
        ],
        "contractDependencies": [
          26004,
          26113
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 9414,
          "nodeType": "StructuredDocumentation",
          "src": "130:555:17",
          "text": " @dev Orchestrated allows to define static access control between multiple contracts.\n This contract would be used as a parent contract of any contract that needs to restrict access to some methods,\n which would be marked with the `onlyOrchestrated modifier.\n During deployment, the contract deployer (`owner`) can register any contracts that have privileged access by calling `orchestrate`.\n Once deployment is completed, `owner` can call `transferOwnership(address(0))` to avoid any more contracts ever gaining privileged access."
        },
        "fullyImplemented": true,
        "id": 9465,
        "linearizedBaseContracts": [
          9465,
          26113,
          26004
        ],
        "name": "Orchestrated",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 9420,
            "name": "GrantedAccess",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9419,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9418,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "access",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9420,
                  "src": "749:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9417,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "749:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "748:16:17"
            },
            "src": "729:36:17"
          },
          {
            "constant": false,
            "functionSelector": "b9181611",
            "id": 9424,
            "mutability": "mutable",
            "name": "authorized",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 9465,
            "src": "773:42:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 9423,
              "keyType": {
                "id": 9421,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "781:7:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "773:24:17",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 9422,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "792:4:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9429,
              "nodeType": "Block",
              "src": "856:2:17",
              "statements": []
            },
            "documentation": null,
            "id": 9430,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 9427,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9426,
                  "name": "Ownable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 26113,
                  "src": "846:7:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Ownable_$26113_$",
                    "typeString": "type(contract Ownable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "846:9:17"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 9425,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "836:2:17"
            },
            "returnParameters": {
              "id": 9428,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "856:0:17"
            },
            "scope": 9465,
            "src": "824:34:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9444,
              "nodeType": "Block",
              "src": "960:67:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 9436,
                          "name": "authorized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9424,
                          "src": "979:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 9439,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 9437,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "990:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 9438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "990:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "979:22:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9440,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9433,
                        "src": "1003:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 9435,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "971:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "971:36:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9442,
                  "nodeType": "ExpressionStatement",
                  "src": "971:36:17"
                },
                {
                  "id": 9443,
                  "nodeType": "PlaceholderStatement",
                  "src": "1018:1:17"
                }
              ]
            },
            "documentation": {
              "id": 9431,
              "nodeType": "StructuredDocumentation",
              "src": "866:43:17",
              "text": "@dev Restrict usage to authorized users"
            },
            "id": 9445,
            "name": "onlyOrchestrated",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 9434,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9433,
                  "mutability": "mutable",
                  "name": "err",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9445,
                  "src": "941:17:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9432,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "941:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "940:19:17"
            },
            "src": "915:112:17",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 9463,
              "nodeType": "Block",
              "src": "1139:77:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 9453,
                        "name": "authorized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9424,
                        "src": "1150:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 9455,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 9454,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9448,
                        "src": "1161:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1150:16:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 9456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1169:4:17",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1150:23:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9458,
                  "nodeType": "ExpressionStatement",
                  "src": "1150:23:17"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9460,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9448,
                        "src": "1203:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9459,
                      "name": "GrantedAccess",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9420,
                      "src": "1189:13:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 9461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1189:19:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9462,
                  "nodeType": "EmitStatement",
                  "src": "1184:24:17"
                }
              ]
            },
            "documentation": {
              "id": 9446,
              "nodeType": "StructuredDocumentation",
              "src": "1035:46:17",
              "text": "@dev Add user to the authorized users list"
            },
            "functionSelector": "80f5a440",
            "id": 9464,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 9451,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9450,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 26062,
                  "src": "1129:9:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1129:9:17"
              }
            ],
            "name": "orchestrate",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 9449,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9448,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9464,
                  "src": "1108:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9447,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1108:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1107:14:17"
            },
            "returnParameters": {
              "id": 9452,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1139:0:17"
            },
            "scope": 9465,
            "src": "1087:129:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 9466,
        "src": "689:530:17"
      }
    ],
    "src": "46:1175:17"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.10+commit.00c0fcaf.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-08-19T15:24:08.745Z",
  "devdoc": {
    "details": "Orchestrated allows to define static access control between multiple contracts. This contract would be used as a parent contract of any contract that needs to restrict access to some methods, which would be marked with the `onlyOrchestrated modifier. During deployment, the contract deployer (`owner`) can register any contracts that have privileged access by calling `orchestrate`. Once deployment is completed, `owner` can call `transferOwnership(address(0))` to avoid any more contracts ever gaining privileged access.",
    "methods": {
      "orchestrate(address)": {
        "details": "Add user to the authorized users list"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}