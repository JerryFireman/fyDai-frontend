{
  "contractName": "Orchestrated",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "access",
          "type": "address"
        }
      ],
      "name": "GrantedAccess",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "orchestrate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.10+commit.00c0fcaf\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"access\",\"type\":\"address\"}],\"name\":\"GrantedAccess\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"orchestrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Orchestrated allows to define static access control between multiple contracts. This contract would be used as a parent contract of any contract that needs to restrict access to some methods, which would be marked with the `onlyOrchestrated modifier. During deployment, the contract deployer (`owner`) can register any contracts that have privileged access by calling `orchestrate`. Once deployment is completed, `owner` can call `transferOwnership(address(0))` to avoid any more contracts ever gaining privileged access.\",\"methods\":{\"orchestrate(address)\":{\"details\":\"Add user to the authorized users list\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/bruce/dev/yieldprotocol/ytoken-mvp/contracts/helpers/Orchestrated.sol\":\"Orchestrated\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/bruce/dev/yieldprotocol/ytoken-mvp/contracts/helpers/Orchestrated.sol\":{\"keccak256\":\"0xc434309d0a0efaa68a8f28e9d9a8529a38e145fd0de505b6d1304873075c17cd\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://fedb160fd94ad70a556e5408d73fef61d73444d4035be1c898e09b6c55c98982\",\"dweb:/ipfs/QmYc6phCSWEB85wcM4P74ZP6YLMuozX7ttvdi94fMCjg1h\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x0de74dfa6b37943c1b834cbd8fb7a8d052e5ff80c7adb33692102dd6cd2985e9\",\"urls\":[\"bzz-raw://9d2d827fcf4a838f5821732c0acd6a40d21c2a5a2cfe2563feec91465f47bb60\",\"dweb:/ipfs/Qmex3wMKf5Sghbfvr288RUg1kP2uAyTMf11w83WbMbpQQc\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x9a8c691b81a4a48adbbd5b010faa56a168c189e711495c16347d93b60b805f82\",\"urls\":[\"bzz-raw://d951d626ed7bfe1a2d7a6bd4af315ff8691929bd567594d6ab53599fe9e17e4e\",\"dweb:/ipfs/QmYkGeowpa6Bjr9aaDirWdDo7hSfShzzZhanKC4nTfRhLj\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060006100246001600160e01b0361007316565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610077565b3390565b6103be806100866000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063715018a61461005157806380f5a4401461005b5780638da5cb5b14610081578063f2fde38b146100a5575b600080fd5b6100596100cb565b005b6100596004803603602081101561007157600080fd5b50356001600160a01b031661017f565b610089610245565b604080516001600160a01b039092168252519081900360200190f35b610059600480360360208110156100bb57600080fd5b50356001600160a01b0316610254565b6100d361035e565b6000546001600160a01b03908116911614610135576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b61018761035e565b6000546001600160a01b039081169116146101e9576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038116600081815260016020818152604092839020805460ff1916909217909155815192835290517f6a7c5f28ea564fafc8b079663a2a9b9d26fe735d97c97611484ce044f40a16e29281900390910190a150565b6000546001600160a01b031690565b61025c61035e565b6000546001600160a01b039081169116146102be576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166103035760405162461bcd60e51b81526004018080602001828103825260268152602001806103636026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a26469706673582212208a42db179f3ce33ca34696444a5b7463e4f0fe20fa233c2c2e153640e0f50c0864736f6c634300060a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c8063715018a61461005157806380f5a4401461005b5780638da5cb5b14610081578063f2fde38b146100a5575b600080fd5b6100596100cb565b005b6100596004803603602081101561007157600080fd5b50356001600160a01b031661017f565b610089610245565b604080516001600160a01b039092168252519081900360200190f35b610059600480360360208110156100bb57600080fd5b50356001600160a01b0316610254565b6100d361035e565b6000546001600160a01b03908116911614610135576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b61018761035e565b6000546001600160a01b039081169116146101e9576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038116600081815260016020818152604092839020805460ff1916909217909155815192835290517f6a7c5f28ea564fafc8b079663a2a9b9d26fe735d97c97611484ce044f40a16e29281900390910190a150565b6000546001600160a01b031690565b61025c61035e565b6000546001600160a01b039081169116146102be576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166103035760405162461bcd60e51b81526004018080602001828103825260268152602001806103636026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b339056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a26469706673582212208a42db179f3ce33ca34696444a5b7463e4f0fe20fa233c2c2e153640e0f50c0864736f6c634300060a0033",
  "sourceMap": "676:513:17:-:0;;;807:34;;;;;;;;;-1:-1:-1;832:17:47;852:12;-1:-1:-1;;;;;852:10:47;:12;:::i;:::-;874:6;:18;;-1:-1:-1;;;;;;874:18:47;-1:-1:-1;;;;;874:18:47;;;;;;;907:43;;874:18;;-1:-1:-1;874:18:47;907:43;;874:6;;907:43;798:159;676:513:17;;735:104:46;822:10;735:104;:::o;676:513:17:-;;;;;;;",
  "deployedSourceMap": "676:513:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1656:145:47;;;:::i;:::-;;1061:126:17;;;;;;;;;;;;;;;;-1:-1:-1;1061:126:17;-1:-1:-1;;;;;1061:126:17;;:::i;1033:77:47:-;;;:::i;:::-;;;;-1:-1:-1;;;;;1033:77:47;;;;;;;;;;;;;;1950:240;;;;;;;;;;;;;;;;-1:-1:-1;1950:240:47;-1:-1:-1;;;;;1950:240:47;;:::i;1656:145::-;1247:12;:10;:12::i;:::-;1237:6;;-1:-1:-1;;;;;1237:6:47;;;:22;;;1229:67;;;;;-1:-1:-1;;;1229:67:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1762:1:::1;1746:6:::0;;1725:40:::1;::::0;-1:-1:-1;;;;;1746:6:47;;::::1;::::0;1725:40:::1;::::0;1762:1;;1725:40:::1;1792:1;1775:19:::0;;-1:-1:-1;;;;;;1775:19:47::1;::::0;;1656:145::o;1061:126:17:-;1247:12:47;:10;:12::i;:::-;1237:6;;-1:-1:-1;;;;;1237:6:47;;;:22;;;1229:67;;;;;-1:-1:-1;;;1229:67:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1123:16:17;::::1;;::::0;;;1142:4:::1;1123:16;::::0;;;;;;;;:23;;-1:-1:-1;;1123:23:17::1;::::0;;::::1;::::0;;;1161:19;;;;;;;::::1;::::0;;;;;;;;::::1;1061:126:::0;:::o;1033:77:47:-;1071:7;1097:6;-1:-1:-1;;;;;1097:6:47;1033:77;:::o;1950:240::-;1247:12;:10;:12::i;:::-;1237:6;;-1:-1:-1;;;;;1237:6:47;;;:22;;;1229:67;;;;;-1:-1:-1;;;1229:67:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2038:22:47;::::1;2030:73;;;;-1:-1:-1::0;;;2030:73:47::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2139:6;::::0;;2118:38:::1;::::0;-1:-1:-1;;;;;2118:38:47;;::::1;::::0;2139:6;::::1;::::0;2118:38:::1;::::0;::::1;2166:6;:17:::0;;-1:-1:-1;;;;;;2166:17:47::1;-1:-1:-1::0;;;;;2166:17:47;;;::::1;::::0;;;::::1;::::0;;1950:240::o;735:104:46:-;822:10;735:104;:::o",
  "source": "// SPDX-License-Identifier: GPL-3.0-or-later\npragma solidity ^0.6.10;\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n\n/**\n * @dev Orchestrated allows to define static access control between multiple contracts.\n * This contract would be used as a parent contract of any contract that needs to restrict access to some methods,\n * which would be marked with the `onlyOrchestrated modifier.\n * During deployment, the contract deployer (`owner`) can register any contracts that have privileged access by calling `orchestrate`.\n * Once deployment is completed, `owner` can call `transferOwnership(address(0))` to avoid any more contracts ever gaining privileged access.\n */\n\ncontract Orchestrated is Ownable {\n    event GrantedAccess(address access);\n\n    mapping(address => bool) private authorized;\n\n    constructor () public Ownable() {}\n\n    /// @dev Restrict usage to authorized users\n    modifier onlyOrchestrated(string memory err) {\n        require(authorized[msg.sender], err);\n        _;\n    }\n\n    /// @dev Add user to the authorized users list\n    function orchestrate(address user) public onlyOwner {\n        authorized[user] = true;\n        emit GrantedAccess(user);\n    }\n}\n",
  "sourcePath": "/Users/bruce/dev/yieldprotocol/ytoken-mvp/contracts/helpers/Orchestrated.sol",
  "ast": {
    "absolutePath": "/Users/bruce/dev/yieldprotocol/ytoken-mvp/contracts/helpers/Orchestrated.sol",
    "exportedSymbols": {
      "Orchestrated": [
        9495
      ]
    },
    "id": 9496,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9442,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "45:24:17"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 9443,
        "nodeType": "ImportDirective",
        "scope": 9496,
        "sourceUnit": 35662,
        "src": "70:52:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9445,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 35661,
              "src": "701:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$35661",
                "typeString": "contract Ownable"
              }
            },
            "id": 9446,
            "nodeType": "InheritanceSpecifier",
            "src": "701:7:17"
          }
        ],
        "contractDependencies": [
          35552,
          35661
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 9444,
          "nodeType": "StructuredDocumentation",
          "src": "125:549:17",
          "text": " @dev Orchestrated allows to define static access control between multiple contracts.\n This contract would be used as a parent contract of any contract that needs to restrict access to some methods,\n which would be marked with the `onlyOrchestrated modifier.\n During deployment, the contract deployer (`owner`) can register any contracts that have privileged access by calling `orchestrate`.\n Once deployment is completed, `owner` can call `transferOwnership(address(0))` to avoid any more contracts ever gaining privileged access."
        },
        "fullyImplemented": true,
        "id": 9495,
        "linearizedBaseContracts": [
          9495,
          35661,
          35552
        ],
        "name": "Orchestrated",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 9450,
            "name": "GrantedAccess",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9449,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9448,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "access",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9450,
                  "src": "735:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9447,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "735:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "734:16:17"
            },
            "src": "715:36:17"
          },
          {
            "constant": false,
            "id": 9454,
            "mutability": "mutable",
            "name": "authorized",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 9495,
            "src": "757:43:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 9453,
              "keyType": {
                "id": 9451,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "765:7:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "757:24:17",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 9452,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "776:4:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 9459,
              "nodeType": "Block",
              "src": "839:2:17",
              "statements": []
            },
            "documentation": null,
            "id": 9460,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 9457,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9456,
                  "name": "Ownable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 35661,
                  "src": "829:7:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Ownable_$35661_$",
                    "typeString": "type(contract Ownable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "829:9:17"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 9455,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "819:2:17"
            },
            "returnParameters": {
              "id": 9458,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "839:0:17"
            },
            "scope": 9495,
            "src": "807:34:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9474,
              "nodeType": "Block",
              "src": "940:64:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 9466,
                          "name": "authorized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9454,
                          "src": "958:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 9469,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 9467,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "969:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 9468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "969:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "958:22:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9470,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9463,
                        "src": "982:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 9465,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "950:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "950:36:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9472,
                  "nodeType": "ExpressionStatement",
                  "src": "950:36:17"
                },
                {
                  "id": 9473,
                  "nodeType": "PlaceholderStatement",
                  "src": "996:1:17"
                }
              ]
            },
            "documentation": {
              "id": 9461,
              "nodeType": "StructuredDocumentation",
              "src": "847:43:17",
              "text": "@dev Restrict usage to authorized users"
            },
            "id": 9475,
            "name": "onlyOrchestrated",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 9464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9463,
                  "mutability": "mutable",
                  "name": "err",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9475,
                  "src": "921:17:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9462,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "921:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "920:19:17"
            },
            "src": "895:109:17",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 9493,
              "nodeType": "Block",
              "src": "1113:74:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 9483,
                        "name": "authorized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9454,
                        "src": "1123:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 9485,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 9484,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9478,
                        "src": "1134:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1123:16:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 9486,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1142:4:17",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1123:23:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9488,
                  "nodeType": "ExpressionStatement",
                  "src": "1123:23:17"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9490,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9478,
                        "src": "1175:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9489,
                      "name": "GrantedAccess",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9450,
                      "src": "1161:13:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 9491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1161:19:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9492,
                  "nodeType": "EmitStatement",
                  "src": "1156:24:17"
                }
              ]
            },
            "documentation": {
              "id": 9476,
              "nodeType": "StructuredDocumentation",
              "src": "1010:46:17",
              "text": "@dev Add user to the authorized users list"
            },
            "functionSelector": "80f5a440",
            "id": 9494,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 9481,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9480,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 35610,
                  "src": "1103:9:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1103:9:17"
              }
            ],
            "name": "orchestrate",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 9479,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9478,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9494,
                  "src": "1082:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9477,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1082:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1081:14:17"
            },
            "returnParameters": {
              "id": 9482,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1113:0:17"
            },
            "scope": 9495,
            "src": "1061:126:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 9496,
        "src": "676:513:17"
      }
    ],
    "src": "45:1145:17"
  },
  "legacyAST": {
    "absolutePath": "/Users/bruce/dev/yieldprotocol/ytoken-mvp/contracts/helpers/Orchestrated.sol",
    "exportedSymbols": {
      "Orchestrated": [
        9495
      ]
    },
    "id": 9496,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9442,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "45:24:17"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 9443,
        "nodeType": "ImportDirective",
        "scope": 9496,
        "sourceUnit": 35662,
        "src": "70:52:17",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9445,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 35661,
              "src": "701:7:17",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$35661",
                "typeString": "contract Ownable"
              }
            },
            "id": 9446,
            "nodeType": "InheritanceSpecifier",
            "src": "701:7:17"
          }
        ],
        "contractDependencies": [
          35552,
          35661
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 9444,
          "nodeType": "StructuredDocumentation",
          "src": "125:549:17",
          "text": " @dev Orchestrated allows to define static access control between multiple contracts.\n This contract would be used as a parent contract of any contract that needs to restrict access to some methods,\n which would be marked with the `onlyOrchestrated modifier.\n During deployment, the contract deployer (`owner`) can register any contracts that have privileged access by calling `orchestrate`.\n Once deployment is completed, `owner` can call `transferOwnership(address(0))` to avoid any more contracts ever gaining privileged access."
        },
        "fullyImplemented": true,
        "id": 9495,
        "linearizedBaseContracts": [
          9495,
          35661,
          35552
        ],
        "name": "Orchestrated",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 9450,
            "name": "GrantedAccess",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9449,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9448,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "access",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9450,
                  "src": "735:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9447,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "735:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "734:16:17"
            },
            "src": "715:36:17"
          },
          {
            "constant": false,
            "id": 9454,
            "mutability": "mutable",
            "name": "authorized",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 9495,
            "src": "757:43:17",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 9453,
              "keyType": {
                "id": 9451,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "765:7:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "757:24:17",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 9452,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "776:4:17",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 9459,
              "nodeType": "Block",
              "src": "839:2:17",
              "statements": []
            },
            "documentation": null,
            "id": 9460,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 9457,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9456,
                  "name": "Ownable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 35661,
                  "src": "829:7:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Ownable_$35661_$",
                    "typeString": "type(contract Ownable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "829:9:17"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 9455,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "819:2:17"
            },
            "returnParameters": {
              "id": 9458,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "839:0:17"
            },
            "scope": 9495,
            "src": "807:34:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9474,
              "nodeType": "Block",
              "src": "940:64:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 9466,
                          "name": "authorized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9454,
                          "src": "958:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 9469,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 9467,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "969:3:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 9468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "969:10:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "958:22:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9470,
                        "name": "err",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9463,
                        "src": "982:3:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 9465,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "950:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "950:36:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9472,
                  "nodeType": "ExpressionStatement",
                  "src": "950:36:17"
                },
                {
                  "id": 9473,
                  "nodeType": "PlaceholderStatement",
                  "src": "996:1:17"
                }
              ]
            },
            "documentation": {
              "id": 9461,
              "nodeType": "StructuredDocumentation",
              "src": "847:43:17",
              "text": "@dev Restrict usage to authorized users"
            },
            "id": 9475,
            "name": "onlyOrchestrated",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 9464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9463,
                  "mutability": "mutable",
                  "name": "err",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9475,
                  "src": "921:17:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9462,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "921:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "920:19:17"
            },
            "src": "895:109:17",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 9493,
              "nodeType": "Block",
              "src": "1113:74:17",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 9483,
                        "name": "authorized",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9454,
                        "src": "1123:10:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 9485,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 9484,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9478,
                        "src": "1134:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1123:16:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 9486,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1142:4:17",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1123:23:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9488,
                  "nodeType": "ExpressionStatement",
                  "src": "1123:23:17"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9490,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9478,
                        "src": "1175:4:17",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9489,
                      "name": "GrantedAccess",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9450,
                      "src": "1161:13:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 9491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1161:19:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9492,
                  "nodeType": "EmitStatement",
                  "src": "1156:24:17"
                }
              ]
            },
            "documentation": {
              "id": 9476,
              "nodeType": "StructuredDocumentation",
              "src": "1010:46:17",
              "text": "@dev Add user to the authorized users list"
            },
            "functionSelector": "80f5a440",
            "id": 9494,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 9481,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9480,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 35610,
                  "src": "1103:9:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1103:9:17"
              }
            ],
            "name": "orchestrate",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 9479,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9478,
                  "mutability": "mutable",
                  "name": "user",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 9494,
                  "src": "1082:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9477,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1082:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1081:14:17"
            },
            "returnParameters": {
              "id": 9482,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1113:0:17"
            },
            "scope": 9495,
            "src": "1061:126:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 9496,
        "src": "676:513:17"
      }
    ],
    "src": "45:1145:17"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.10+commit.00c0fcaf.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-07-20T10:58:14.726Z",
  "devdoc": {
    "details": "Orchestrated allows to define static access control between multiple contracts. This contract would be used as a parent contract of any contract that needs to restrict access to some methods, which would be marked with the `onlyOrchestrated modifier. During deployment, the contract deployer (`owner`) can register any contracts that have privileged access by calling `orchestrate`. Once deployment is completed, `owner` can call `transferOwnership(address(0))` to avoid any more contracts ever gaining privileged access.",
    "methods": {
      "orchestrate(address)": {
        "details": "Add user to the authorized users list"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}