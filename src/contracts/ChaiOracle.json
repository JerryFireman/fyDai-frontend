{
  "contractName": "ChaiOracle",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pot_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "CHAI",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "RAD",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "RAY",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "WAD",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "WETH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "_pot",
      "outputs": [
        {
          "internalType": "contract IPot",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.2+commit.bacdbe57\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pot_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CHAI\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RAD\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RAY\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WAD\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_pot\",\"outputs\":[{\"internalType\":\"contract IPot\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ChaiOracle retrieves the price for Chai as the DSR fee from Pot\",\"methods\":{\"constructor\":{\"details\":\"ChaiOracle connects to Pot\"},\"price()\":{\"details\":\"We update chi and retrieve it from pot as the price chai = (1/chi) * dai dai = chi * chai price = chi\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/bruce/dev/yieldprotocol/ytoken-mvp/contracts/ChaiOracle.sol\":\"ChaiOracle\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/bruce/dev/yieldprotocol/ytoken-mvp/contracts/ChaiOracle.sol\":{\"keccak256\":\"0xee642c26b1dda6954bf2425a38cc5eb0aa0214b0f54518c24b15a340a15d097b\",\"urls\":[\"bzz-raw://166788631ec7220532a9db55ffbe7529f18296345312da768537712aff2b25a9\",\"dweb:/ipfs/QmSPn3HovKz6wve9pZfj7yekQAVndqKxFQNe7uU3GsFKKb\"]},\"/Users/bruce/dev/yieldprotocol/ytoken-mvp/contracts/helpers/Constants.sol\":{\"keccak256\":\"0x4fce3c7234c92373731036711aee9d29d9a00f71a8505d1280743819489f1b2a\",\"urls\":[\"bzz-raw://2b5d28b17d2a41bd07aad8f736e24e936cad972f99df96e5c5b8c19bd0723355\",\"dweb:/ipfs/QmU71Vjw6kTdSmofmRi7PxfB1EHTmeJLnmbhaavQc8vPxx\"]},\"/Users/bruce/dev/yieldprotocol/ytoken-mvp/contracts/interfaces/IOracle.sol\":{\"keccak256\":\"0x1c01c3a9a34c5f4cc50fdfc42ac7b8c4b475a60f6d49daf1f04900618ca9f1e5\",\"urls\":[\"bzz-raw://8d0264d8aa3cd9e46d416cf0c89c66cd4fb617e435df9ce55c28873ad80d5b1b\",\"dweb:/ipfs/QmdQJg3hXCxGUmFiwj27yHz2M3QdaQ32w1irbhfdLjHqwq\"]},\"/Users/bruce/dev/yieldprotocol/ytoken-mvp/contracts/interfaces/IPot.sol\":{\"keccak256\":\"0xa681f2aa88397320f9a228c896cf924d8a0d916d188e4610e41f37e3158a97d5\",\"urls\":[\"bzz-raw://96c9606a2a5a47859eb66d72d16519f963755cf1fea6ab20302ca38d38eeee2d\",\"dweb:/ipfs/Qme2GCZDGTV9sfTD2hec91RSXvQ4Fh3tfvg71KftBNMPiM\"]},\"@hq20/contracts/contracts/math/DecimalMath.sol\":{\"keccak256\":\"0x1b0a023d51f37310e253602378d07217f6c67de2ebd8df296db3c3c276c854ed\",\"urls\":[\"bzz-raw://994ba929f5b5242f43b02e3a9b992b4b42c79414ca0a0dca46d407d36d9003b5\",\"dweb:/ipfs/QmQV12GQvCRQgNq3JHkjAa2CqNFye5s5DrfTLVC3GpMqK3\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x04d34b3cd5677bea25f8dfceb6dec0eaa071d4d4b789a43f13fe0c415ba4c296\",\"urls\":[\"bzz-raw://e7e8b526a6839e5ba14f0d23a830387fec47f7043ce01d42c9f285b709a9d080\",\"dweb:/ipfs/QmXmhhFmX5gcAvVzNiDPAGA35iHMPNaYtQkACswRHBVTNw\"]},\"@openzeppelin/contracts/math/SignedSafeMath.sol\":{\"keccak256\":\"0xfadc24a31d75d6b3f955190cffe13bbe6e24a274c12b2b60e8c4004131487ce8\",\"urls\":[\"bzz-raw://0ec35367d49b2ea45f556a439f836e208d2460faeb6e2341e9130d163128b619\",\"dweb:/ipfs/QmTwKCBdkVAarY5hteSdwQ1J4GpogZoxCZHrbieMQVzuQJ\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516104d53803806104d58339818101604052602081101561003357600080fd5b8101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610441806100946000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063a035b1fe1161005b578063a035b1fe146100ee578063ac2f573f1461010c578063ad5c464814610156578063b6dbf9ce146101745761007d565b806306f405fd14610082578063552033c4146100a65780636a146024146100ca575b600080fd5b61008a610192565b604051808260ff1660ff16815260200191505060405180910390f35b6100ae610197565b604051808260ff1660ff16815260200191505060405180910390f35b6100d261019c565b604051808260ff1660ff16815260200191505060405180910390f35b6100f66101a1565b6040518082815260200191505060405180910390f35b61011461039e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61015e6103c3565b6040518082815260200191505060405180910390f35b61017c6103e7565b6040518082815260200191505060405180910390f35b602d81565b601b81565b601281565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166320aba08b6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561020c57600080fd5b505af1158015610220573d6000803e3d6000fd5b505050506040513d602081101561023657600080fd5b810190808051906020019092919050505042116102f4576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c92aecc46040518163ffffffff1660e01b815260040160206040518083038186803b1580156102b457600080fd5b505afa1580156102c8573d6000803e3d6000fd5b505050506040513d60208110156102de57600080fd5b8101908080519060200190929190505050610399565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639f678cca6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561035d57600080fd5b505af1158015610371573d6000803e3d6000fd5b505050506040513d602081101561038757600080fd5b81019080805190602001909291905050505b905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f574554480000000000000000000000000000000000000000000000000000000081565b7f43484149000000000000000000000000000000000000000000000000000000008156fea2646970667358221220fcd2129798046a3e3552de5e12efc26a38ab594ebd0185a4a6072327aed62b4964736f6c63430006020033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c8063a035b1fe1161005b578063a035b1fe146100ee578063ac2f573f1461010c578063ad5c464814610156578063b6dbf9ce146101745761007d565b806306f405fd14610082578063552033c4146100a65780636a146024146100ca575b600080fd5b61008a610192565b604051808260ff1660ff16815260200191505060405180910390f35b6100ae610197565b604051808260ff1660ff16815260200191505060405180910390f35b6100d261019c565b604051808260ff1660ff16815260200191505060405180910390f35b6100f66101a1565b6040518082815260200191505060405180910390f35b61011461039e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61015e6103c3565b6040518082815260200191505060405180910390f35b61017c6103e7565b6040518082815260200191505060405180910390f35b602d81565b601b81565b601281565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166320aba08b6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561020c57600080fd5b505af1158015610220573d6000803e3d6000fd5b505050506040513d602081101561023657600080fd5b810190808051906020019092919050505042116102f4576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c92aecc46040518163ffffffff1660e01b815260040160206040518083038186803b1580156102b457600080fd5b505afa1580156102c8573d6000803e3d6000fd5b505050506040513d60208110156102de57600080fd5b8101908080519060200190929190505050610399565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639f678cca6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561035d57600080fd5b505af1158015610371573d6000803e3d6000fd5b505050506040513d602081101561038757600080fd5b81019080805190602001909291905050505b905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f574554480000000000000000000000000000000000000000000000000000000081565b7f43484149000000000000000000000000000000000000000000000000000000008156fea2646970667358221220fcd2129798046a3e3552de5e12efc26a38ab594ebd0185a4a6072327aed62b4964736f6c63430006020033",
  "sourceMap": "257:514:0:-:0;;;437:68;8:9:-1;5:2;;;30:1;27;20:12;5:2;437:68:0;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;437:68:0;;;;;;;;;;;;;;;;493:4;481;;:17;;;;;;;;;;;;;;;;;;437:68;257:514;;;;;;",
  "deployedSourceMap": "257:514:0:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;257:514:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;170:30:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;134;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;98;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;650:119:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;374:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;207:37:17;;;:::i;:::-;;;;;;;;;;;;;;;;;;;294;;;:::i;:::-;;;;;;;;;;;;;;;;;;;170:30;198:2;170:30;:::o;134:::-;162:2;134:30;:::o;98:::-;126:2;98:30;:::o;650:119:0:-;691:7;724:4;;;;;;;;;;;:8;;;:10;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;724:10:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;724:10:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;724:10:0;;;;;;;;;;;;;;;;718:3;:16;717:45;;752:4;;;;;;;;;;;:8;;;:10;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;752:10:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;752:10:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;752:10:0;;;;;;;;;;;;;;;;717:45;;;738:4;;;;;;;;;;;:9;;;:11;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;738:11:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;738:11:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;738:11:0;;;;;;;;;;;;;;;;717:45;710:52;;650:119;:::o;374:16::-;;;;;;;;;;;;;:::o;207:37:17:-;;;:::o;294:::-;;;:::o",
  "source": "pragma solidity ^0.6.2;\nimport \"@hq20/contracts/contracts/math/DecimalMath.sol\";\nimport \"./helpers/Constants.sol\";\nimport \"./interfaces/IPot.sol\";\nimport \"./interfaces/IOracle.sol\";\n\n\n/// @dev ChaiOracle retrieves the price for Chai as the DSR fee from Pot\ncontract ChaiOracle is IOracle, Constants {\n    using DecimalMath for uint256;\n    using DecimalMath for uint8;\n\n    IPot public _pot;\n\n    /// @dev ChaiOracle connects to Pot\n    constructor (address pot_) public {\n        _pot = IPot(pot_);\n    }\n\n    /// @dev We update chi and retrieve it from pot as the price\n    /// chai = (1/chi) * dai\n    /// dai = chi * chai\n    /// price = chi\n    function price() public override returns(uint256) {\n        return (now > _pot.rho()) ? _pot.drip() : _pot.chi();\n    }\n}",
  "sourcePath": "/Users/bruce/dev/yieldprotocol/ytoken-mvp/contracts/ChaiOracle.sol",
  "ast": {
    "absolutePath": "/Users/bruce/dev/yieldprotocol/ytoken-mvp/contracts/ChaiOracle.sol",
    "exportedSymbols": {
      "ChaiOracle": [
        51
      ]
    },
    "id": 52,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "@hq20/contracts/contracts/math/DecimalMath.sol",
        "file": "@hq20/contracts/contracts/math/DecimalMath.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 52,
        "sourceUnit": 11745,
        "src": "24:56:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/bruce/dev/yieldprotocol/ytoken-mvp/contracts/helpers/Constants.sol",
        "file": "./helpers/Constants.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 52,
        "sourceUnit": 9985,
        "src": "81:33:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/bruce/dev/yieldprotocol/ytoken-mvp/contracts/interfaces/IPot.sol",
        "file": "./interfaces/IPot.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 52,
        "sourceUnit": 10509,
        "src": "115:31:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/bruce/dev/yieldprotocol/ytoken-mvp/contracts/interfaces/IOracle.sol",
        "file": "./interfaces/IOracle.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 52,
        "sourceUnit": 10474,
        "src": "147:34:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6,
              "name": "IOracle",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10473,
              "src": "280:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IOracle_$10473",
                "typeString": "contract IOracle"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "280:7:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8,
              "name": "Constants",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9984,
              "src": "289:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Constants_$9984",
                "typeString": "contract Constants"
              }
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "289:9:0"
          }
        ],
        "contractDependencies": [
          9984,
          10473
        ],
        "contractKind": "contract",
        "documentation": "@dev ChaiOracle retrieves the price for Chai as the DSR fee from Pot",
        "fullyImplemented": true,
        "id": 51,
        "linearizedBaseContracts": [
          51,
          9984,
          10473
        ],
        "name": "ChaiOracle",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 12,
            "libraryName": {
              "contractScope": null,
              "id": 10,
              "name": "DecimalMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11744,
              "src": "311:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DecimalMath_$11744",
                "typeString": "library DecimalMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "305:30:0",
            "typeName": {
              "id": 11,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "327:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 15,
            "libraryName": {
              "contractScope": null,
              "id": 13,
              "name": "DecimalMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11744,
              "src": "346:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DecimalMath_$11744",
                "typeString": "library DecimalMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "340:28:0",
            "typeName": {
              "id": 14,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "362:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "ac2f573f",
            "id": 17,
            "name": "_pot",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 51,
            "src": "374:16:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IPot_$10508",
              "typeString": "contract IPot"
            },
            "typeName": {
              "contractScope": null,
              "id": 16,
              "name": "IPot",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10508,
              "src": "374:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPot_$10508",
                "typeString": "contract IPot"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 28,
              "nodeType": "Block",
              "src": "471:34:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 26,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 22,
                      "name": "_pot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "481:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPot_$10508",
                        "typeString": "contract IPot"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 24,
                          "name": "pot_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "493:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 23,
                        "name": "IPot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10508,
                        "src": "488:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IPot_$10508_$",
                          "typeString": "type(contract IPot)"
                        }
                      },
                      "id": 25,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "488:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPot_$10508",
                        "typeString": "contract IPot"
                      }
                    },
                    "src": "481:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPot_$10508",
                      "typeString": "contract IPot"
                    }
                  },
                  "id": 27,
                  "nodeType": "ExpressionStatement",
                  "src": "481:17:0"
                }
              ]
            },
            "documentation": "@dev ChaiOracle connects to Pot",
            "id": 29,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19,
                  "name": "pot_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 29,
                  "src": "450:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "450:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "449:14:0"
            },
            "returnParameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "471:0:0"
            },
            "scope": 51,
            "src": "437:68:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              10472
            ],
            "body": {
              "id": 49,
              "nodeType": "Block",
              "src": "700:69:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 39,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 35,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -17,
                            "src": "718:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "id": 36,
                                "name": "_pot",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17,
                                "src": "724:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IPot_$10508",
                                  "typeString": "contract IPot"
                                }
                              },
                              "id": 37,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rho",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10492,
                              "src": "724:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                                "typeString": "function () external returns (uint256)"
                              }
                            },
                            "id": 38,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "724:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "718:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 40,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "717:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 44,
                          "name": "_pot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "752:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPot_$10508",
                            "typeString": "contract IPot"
                          }
                        },
                        "id": 45,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "chi",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10480,
                        "src": "752:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 46,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "752:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "717:45:0",
                    "trueExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 41,
                          "name": "_pot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "738:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPot_$10508",
                            "typeString": "contract IPot"
                          }
                        },
                        "id": 42,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "drip",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10497,
                        "src": "738:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                          "typeString": "function () external returns (uint256)"
                        }
                      },
                      "id": 43,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "738:11:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 34,
                  "id": 48,
                  "nodeType": "Return",
                  "src": "710:52:0"
                }
              ]
            },
            "documentation": "@dev We update chi and retrieve it from pot as the price\n chai = (1/chi) * dai\n dai = chi * chai\n price = chi",
            "functionSelector": "a035b1fe",
            "id": 50,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "price",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 31,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "674:8:0"
            },
            "parameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "664:2:0"
            },
            "returnParameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 50,
                  "src": "691:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "691:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "690:9:0"
            },
            "scope": 51,
            "src": "650:119:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 52,
        "src": "257:514:0"
      }
    ],
    "src": "0:771:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/bruce/dev/yieldprotocol/ytoken-mvp/contracts/ChaiOracle.sol",
    "exportedSymbols": {
      "ChaiOracle": [
        51
      ]
    },
    "id": 52,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "@hq20/contracts/contracts/math/DecimalMath.sol",
        "file": "@hq20/contracts/contracts/math/DecimalMath.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 52,
        "sourceUnit": 11745,
        "src": "24:56:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/bruce/dev/yieldprotocol/ytoken-mvp/contracts/helpers/Constants.sol",
        "file": "./helpers/Constants.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 52,
        "sourceUnit": 9985,
        "src": "81:33:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/bruce/dev/yieldprotocol/ytoken-mvp/contracts/interfaces/IPot.sol",
        "file": "./interfaces/IPot.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 52,
        "sourceUnit": 10509,
        "src": "115:31:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/bruce/dev/yieldprotocol/ytoken-mvp/contracts/interfaces/IOracle.sol",
        "file": "./interfaces/IOracle.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 52,
        "sourceUnit": 10474,
        "src": "147:34:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6,
              "name": "IOracle",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10473,
              "src": "280:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IOracle_$10473",
                "typeString": "contract IOracle"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "280:7:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8,
              "name": "Constants",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9984,
              "src": "289:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Constants_$9984",
                "typeString": "contract Constants"
              }
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "289:9:0"
          }
        ],
        "contractDependencies": [
          9984,
          10473
        ],
        "contractKind": "contract",
        "documentation": "@dev ChaiOracle retrieves the price for Chai as the DSR fee from Pot",
        "fullyImplemented": true,
        "id": 51,
        "linearizedBaseContracts": [
          51,
          9984,
          10473
        ],
        "name": "ChaiOracle",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 12,
            "libraryName": {
              "contractScope": null,
              "id": 10,
              "name": "DecimalMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11744,
              "src": "311:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DecimalMath_$11744",
                "typeString": "library DecimalMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "305:30:0",
            "typeName": {
              "id": 11,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "327:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 15,
            "libraryName": {
              "contractScope": null,
              "id": 13,
              "name": "DecimalMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11744,
              "src": "346:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DecimalMath_$11744",
                "typeString": "library DecimalMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "340:28:0",
            "typeName": {
              "id": 14,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "362:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "ac2f573f",
            "id": 17,
            "name": "_pot",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 51,
            "src": "374:16:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IPot_$10508",
              "typeString": "contract IPot"
            },
            "typeName": {
              "contractScope": null,
              "id": 16,
              "name": "IPot",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10508,
              "src": "374:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPot_$10508",
                "typeString": "contract IPot"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 28,
              "nodeType": "Block",
              "src": "471:34:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 26,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 22,
                      "name": "_pot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "481:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPot_$10508",
                        "typeString": "contract IPot"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 24,
                          "name": "pot_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19,
                          "src": "493:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 23,
                        "name": "IPot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10508,
                        "src": "488:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IPot_$10508_$",
                          "typeString": "type(contract IPot)"
                        }
                      },
                      "id": 25,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "488:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IPot_$10508",
                        "typeString": "contract IPot"
                      }
                    },
                    "src": "481:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPot_$10508",
                      "typeString": "contract IPot"
                    }
                  },
                  "id": 27,
                  "nodeType": "ExpressionStatement",
                  "src": "481:17:0"
                }
              ]
            },
            "documentation": "@dev ChaiOracle connects to Pot",
            "id": 29,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19,
                  "name": "pot_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 29,
                  "src": "450:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "450:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "449:14:0"
            },
            "returnParameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "471:0:0"
            },
            "scope": 51,
            "src": "437:68:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              10472
            ],
            "body": {
              "id": 49,
              "nodeType": "Block",
              "src": "700:69:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 39,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 35,
                            "name": "now",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -17,
                            "src": "718:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "id": 36,
                                "name": "_pot",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17,
                                "src": "724:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IPot_$10508",
                                  "typeString": "contract IPot"
                                }
                              },
                              "id": 37,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rho",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10492,
                              "src": "724:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                                "typeString": "function () external returns (uint256)"
                              }
                            },
                            "id": 38,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "724:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "718:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 40,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "717:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 44,
                          "name": "_pot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "752:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPot_$10508",
                            "typeString": "contract IPot"
                          }
                        },
                        "id": 45,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "chi",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10480,
                        "src": "752:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 46,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "752:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "717:45:0",
                    "trueExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 41,
                          "name": "_pot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "738:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IPot_$10508",
                            "typeString": "contract IPot"
                          }
                        },
                        "id": 42,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "drip",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10497,
                        "src": "738:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_uint256_$",
                          "typeString": "function () external returns (uint256)"
                        }
                      },
                      "id": 43,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "738:11:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 34,
                  "id": 48,
                  "nodeType": "Return",
                  "src": "710:52:0"
                }
              ]
            },
            "documentation": "@dev We update chi and retrieve it from pot as the price\n chai = (1/chi) * dai\n dai = chi * chai\n price = chi",
            "functionSelector": "a035b1fe",
            "id": 50,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "price",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 31,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "674:8:0"
            },
            "parameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "664:2:0"
            },
            "returnParameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 50,
                  "src": "691:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "691:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "690:9:0"
            },
            "scope": 51,
            "src": "650:119:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 52,
        "src": "257:514:0"
      }
    ],
    "src": "0:771:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.2+commit.bacdbe57.Emscripten.clang"
  },
  "networks": {
    "1337": {
      "events": {},
      "links": {},
      "address": "0xA0dbC274f8ed0912C3c1013f8Fe2c721939C0b17",
      "transactionHash": "0x0e9e055ee5a47cf91d783a51e66d8dc0092ff910fbe60f1b05788e47cc364047"
    }
  },
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-07-01T06:27:42.159Z",
  "networkType": "ethereum",
  "devdoc": {
    "details": "ChaiOracle retrieves the price for Chai as the DSR fee from Pot",
    "methods": {
      "constructor": {
        "details": "ChaiOracle connects to Pot"
      },
      "price()": {
        "details": "We update chi and retrieve it from pot as the price chai = (1/chi) * dai dai = chi * chai price = chi"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}